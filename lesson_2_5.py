# инициализируем список, по условиям на входе непустой список
lst = [4, 5, 7, 10, 1, 5, 7]
# сортируем в обратном порядке встроенным методом объекта класса список
lst.sort(reverse = True)
print(lst)
# в бесконечном цикле принимаем со стандартного ввода числа для помещения в сортированный список
while True:
    val = int(input('Введите натуральное число:\n'))
# если введенного значения еще в списке нет
    if lst.count(val) == 0:
        # если введенное значение больше самого большого значения в списке (нулевой элемент), то вставляем в начало списка
        if val > lst[0]:
            lst.insert(0, val)
        # иначе если меньше самого маленького, то добавляем в хвост списка
        elif val < lst[len(lst)-1]:
            lst.append(val)
        # если введенного значения нет в списке и оно не меньше и не больше имеющихся в списке, то ставим новое
        # значение на свое место в сортированном списке, место находим методом итерационного деления списка пополам -
        # более быстрый алгоритм в среднем, чем прямой перебор
        else:
            min_i = 0
            max_i = len(lst)
            i = min_i + (max_i - min_i) // 2
            while (max_i - min_i) > 1:
                if val > lst[i]:
                    max_i = max_i - ((max_i-min_i) // 2)
                    i = min_i + (max_i - min_i) // 2
                else:
                    min_i = min_i + ((max_i-min_i) // 2)
                    i = min_i + (max_i - min_i) // 2
            lst.insert(i+1, val)
    # если введенное значение уже есть в списке, то вставляем после уже имеющихся экземпляров
    else:
        lst.insert(lst.index(val)+lst.count(val), val)
    print(lst)